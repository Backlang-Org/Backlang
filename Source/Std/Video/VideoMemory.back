import Color;

const VideoMemory::Width = 480;
const VideoMemory::Height = VideoMemory::Width / 4 * 3;

struct VideoMemory {
    FramebufferAddress : i8;
}

implementation of static VideoMemory {
    fn new() {
        asm {
            InvFbAddr S;
            mov &[FramebufferAddress], S;
        }
    }

    fn swap() {
        asm {
            Swap;
            InvFbAddr S;
            mov &[FramebufferAddress], S;
        }
    }

    fn setPixel(x : u32, y : u32, color : Color) {
        let address : u32* = y * VideoMemory::Width + x;

        *address = color.value;
    }
}