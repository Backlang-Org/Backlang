func Memory::clear(start : u32*, end : u32*) static {
    Memory::set(start, end, 0);
}

func Memory::set(start : u32*, end : u32*, value : u32) static {
    if end < start {
        return error(nameof(end) + " must be greater than " + start);
    }

    for i in 0..end) {
       *start = value;
       start += 1;
    }
}

func Memory::copy(src : u32*, dest : u32*) static {
    *dest = *src;
}

func Memory::copy<T>(src : T[], dst : T[]) static
    where T : u8..u32, i8, i32
{
    if src.length != dst.length {
        error(nameof(src) + " has to have same length as " + nameof(dst));
    }

    for i in 0..src.length {
        dst[i] = src[i];
    }
}