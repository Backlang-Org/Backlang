StreamPlan 23.05.2022 Backseat-Montag:
	
	- !! implementieren:
		func hello(somtehing!! : Point) {
		
		}
		
		wird expandiert zu:
		
		func hello(somtehing : Point) {
			if sometehing == none {
				error("Argument " + nameof(someheting) + " is none");
			}
	
		}

		func hello2(value!! : i8) {
		
		}

		wird expandiert zu:
		
		func hello2(value : u8) {
			if value == default {
				error("Argument " + nameof(value) + " is " + value);
			}
		}

	- expansion von integraltypes in implement block implementieren:
		implement i8..i32 {
			func do() -> SELF {
			
			}
		}

		expandiert alle integral types im range, also i8,i16,i32

	- Scopes implementieren
	- short assignment operatoren implementieren (lexer, parser, expansion)
		+= -= *= /=

	- obj als primitiven datentyp festlegen + in vscode extension
	- :: als static lookup operator definieren
	- implement blöcke nicht in original assembly sondern in neue implement klasse, falls typ nicht in selber assembly ist
	- macro folgende syntax erlauben:
		mymacro(args) {
			//do something
		}
	- BuiltInMacros implementieren
		- nameof

	- expanding von implement-block fixen von:
		implement u8 {
			func do() -> SELF {
				return 12;
			}
		}